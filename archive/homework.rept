
-----------------------------Chapter 01-01-------------------------------

                               Selection Problem

TIME: Tue Dec  3 13:55:58 2013

ASTRINGENT: O(N*logN)
No.     DATA_SIZE         KVALUE:VALIDATION     TIME(usec)=>ASTRINGENT
 1             10         -40772:         5              3=>  0.130288
 2             20         -89860:        10              3=>  0.050071
 3             30         -40772:        15              3=>  0.029401
 4             40         -39666:        20              4=>  0.027109
 5             50         -39666:        25              5=>  0.025562
 6             60         -29967:        30              5=>  0.020353
 7             70         -29967:        35              4=>  0.013450
 8             80         -33204:        40              6=>  0.017115
 9             90         -33204:        45              8=>  0.019754
10            100         -39566:        50             11=>  0.023886
11            500         -21237:       250             33=>  0.010620
12           1000          11488:       500             64=>  0.009265
13           5000          -9781:      2500            360=>  0.008453
14          10000          -2686:      5000            657=>  0.007133
15          50000          -1185:     25000           2232=>  0.004126
16         100000          -1199:     50000           3806=>  0.003306
17         500000           -727:    250001          10344=>  0.001577
18        1000000           -731:    500000          23453=>  0.001698
19        5000000             63:   2500001         106548=>  0.001382
20       10000000             57:   5000008         286832=>  0.001780

-----------------------------Chapter 01-04-------------------------------

                               Expanding Header Files

TIME: Tue Dec  3 13:55:59 2013

>>>>>>>> main.m <<<<<<<<
/*--------------------------------------------------------------*/
/*-AUTHOR:      Incarnation.P Lee                               */
/*-DATE:        08042013                                        */
/*-WHAT:        Homework of DSAAA                               */
/*-REVISION:                                                    */
/*- DATE ------------------------ DESCRIPTION ------------------*/
/*- 08042013    CHAPTER 1. Initilize the program.              -*/
/*- 10242013    CHAPTER 1. Add function pointer.               -*/
/*-                        Start chapter1.2                    -*/
/*--------------------------------------------------------------*/
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "vars.h"
 +vars.h
#include "externals.h"
 +externals.h

int
main(int argc, char **argv)
{
  register HOMEWORK *hw_entry = homework;
  ENTER("main");

  filepointer_init();

  while(hw_entry < homework + sizeof(homework) / sizeof(HOMEWORK))
    (*hw_entry++)();

  filepointer_close();

  LEAVE;
  return EXIT_SUCCESS;
}

>>>>>>>> chapter_1.m <<<<<<<<
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "chapter_1.h"
 +chapter_1.h

#include "chapter_1_1.c"
 +chapter_1_1.c
#include "chapter_1_4.c"
 +chapter_1_4.c

>>>>>>>> defs.h <<<<<<<<
#ifndef DEFINES_H
#define DEFINES_H


#if 1
#define STD_HEAD_FILE
#else
#define NO_STD_HEAD_FILE
#endif


#define MIN_STEP_WIDTH             1
#define DATA_MAX                   1024000
#define TRACE_DEPTH                4098
#define MAX_WIDTH_OF_LINE          120
#define FULL_NAME_LENGTH           256
#define REPEAT_COUNT               100
#define SUB_CASES_COUNT            1024
#define MAX_SUB_DATA_SIZE          10
#define FILENAME_SPLITER           "\"< >"
#define REPEAT_USED                0x1010
#define REPEAT_UNUSED              0x0101
#define REPEATED                   0xA0A0
#define NOT_REPEATED               0x0A0A
#define CONTAINED                  0x1234
#define NOT_CONTAINED              0x4321
#define CONTAINS_COUNT             10000
#define MIN_DOUBLE                 0.000001f


#ifdef NO_STD_HEAD_FILE
#define EXPAND_DEPTH               128
#define FILENAME_LENGTH            32
#endif


#define ENTER(fname)     enter(#fname)
#define LEAVE            leave()
#define TIME_START       timing_start()
#define TIME_END(usec)   timing_end(usec)

#define SEQ_PERFORMANCE(times, func, start, end, type) \
while((times)-- > 0) \
{  \
  (*(func))((start), (end), (type)); \
}
#define CON_PERFORMANCE(times, func, specified, raw_data, size_c) \
(*(func))((specified), (raw_data), (size_c)); \
while(--(times) > 0) \
{  \
  (*(func))((specified), (raw_data), (size_c)); \
}
#define SUB_PERFORMANCE(times, func, data_in, size_s, st, ed) \
(*(func))((data_in), (size_s), (st), (ed)); \
while(--(times) > 0) \
{ \
  (*(func))((data_in), (size_s), (st), (ed)); \
}


typedef void (*HOMEWORK)(void);
typedef enum repeat_vehicle{
  UTIL,
  USED,
  SWAP,
}Rept_v;
typedef enum minsub_sequence{
  MIN_SUB,
  MIN_POSITIVE_SUB,
  MAX_MULTI_SUB,
}MinSub_seq;

typedef struct rept_entry{
  int      kvalue;
  int      data_size;
  int      validate;
  unsigned usec_cost;
  int      count;
  double   astringent;
}REPT_entry;

typedef struct gen_random_report{
  unsigned usec;
  int      dimension;
  char     *outline;
  int      start;
  int      end;
  double   expected;
}GR_report;

typedef struct iscontains_report{
  unsigned usec;
  int      min;
  int      size_c;
  double   astringent;
  int      result;
}IC_report;

typedef struct sub_sequence{
  double   min;
  unsigned usec;
  int      st;
  int      ed;
  double   astringent;
}SU_seq;

#endif

>>>>>>>> externals.h <<<<<<<<
#ifndef EXTERNALS_H
#define EXTERNALS_H


extern void
enter(const char *);
extern void
leave(void);
extern void
filepointer_init(void);
extern void
filepointer_close(void);

extern void
chapt_1_1(void);
extern void
chapt_1_4(void);
extern void
chapt_2_7(void);
extern void
chapt_2_11(void);

#endif

-----------------------------Chapter 02-07-------------------------------

                               Random Generation

TIME: Tue Dec  3 13:55:59 2013
NUM_START      END  DIMENSION    TIME(usec)  DESCRIPTION     ASTRINGENT
        1       10         10        1.8000  UNTIL Diffence   0.1800000
       11       20         10        1.7400  UNTIL Diffence   0.1740000
        1      100        100       70.8100  UNTIL Diffence   0.0070810
      201      400        200      253.7500  UNTIL Diffence   0.0031719
      101      600        500     1628.7200  UNTIL Diffence   0.0013030
       11     1000        990     6877.8100  UNTIL Diffence   0.0007088
     1001     2000       1000     6696.0800  UNTIL Diffence   0.0006696
        1       10         10        1.3900  USED Buffering   1.3900000
       11       20         10        1.4000  USED Buffering   1.4000000
        1      100        100       20.8700  USED Buffering   0.2087000
      201      400        200       46.5100  USED Buffering   0.1162750
      101      600        500      132.7800  USED Buffering   0.0531120
       11     1000        990      285.5500  USED Buffering   0.0291348
     1001     2000       1000      292.9800  USED Buffering   0.0292980
        1       10         10        0.3200  SWAP Randomly    3.2000000
       11       20         10        0.3100  SWAP Randomly    3.1000000
        1      100        100        2.3100  SWAP Randomly    2.3100000
      201      400        200        4.5000  SWAP Randomly    2.2500000
      101      600        500       11.1100  SWAP Randomly    2.2220000
       11     1000        990       21.8600  SWAP Randomly    2.2080808
     1001     2000       1000       22.0500  SWAP Randomly    2.2050000

-----------------------------Chapter 02-11-------------------------------

                               Specified Contains

TIME: Tue Dec  3 13:56:00 2013

NUMBER(MIN)  DIMENSION   TIME(usec)    RESULT      ASTRINGENT
EXPECTED: O[log(N)]
         1          10         386     NO_CONTAINS 167.637670
        11          20         516     NO_CONTAINS 172.245032
         1         100         545     NO_CONTAINS 118.345246
       201         400         611     NO_CONTAINS 101.978405
       101         600         680     CONTAINS    106.300997
        11        1000         720     NO_CONTAINS 104.230676
      1001       12000         884     NO_CONTAINS  94.116024
         1       42000         976     NO_CONTAINS  91.682578
       101       82000        1051     NO_CONTAINS  92.889864
      2001       62000         997     NO_CONTAINS  90.349793
       121      122000        1040     NO_CONTAINS  88.799510
        11     3452000        1237     CONTAINS     82.168317
      9001     8622000        1348     CONTAINS     84.409177

-----------------------------Chapter 02-12-------------------------------

                               Sub Sequences

TIME: Tue Dec  3 13:56:00 2013

Input Data:
INDEX  [00] [01] [02] [03] [04] [05] [06] [07] [08] [09]
   0.   0.1  0.2  0.0  0.3  0.4  0.5  0.6  0.9  0.8  0.7 
   1.  -0.1 -2.1  3.8 -0.9  1.3  9.0 -2.1 -6.0 -0.4 -1.1 
   2.  -0.1 -0.1 -2.8 -1.9 -0.3 -1.3 -7.1 -2.0 -0.3 -2.7 
   3.   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 
   4.   1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1 
   5.  -0.1  0.2 -0.3  0.4 -0.5  0.6 -0.7  0.8 -0.8  0.9 
   6.  -0.2 -0.8  1.3 -1.9  0.7 -2.1 -3.2  2.3  3.4 -1.1 
   7.  -2.1 -8.3 -0.8 -0.4  7.3  2.3 -8.2 -2.7 -1.5 -0.1 
   8.  -3.3 -2.2  1.3 -4.7  2.1  0.7 -3.4 -2.8 -1.4 -8.1 
   9.  -0.1 -2.9  4.2 -1.9  2.9  7.3 -1.4 -6.2 -1.4 -0.1 
Report:
INDEX    MINIMUN    START      END   TIME(usec)   ASTRINGENT
MINIMUN SUB SEQUENCE *ASTRINGENT => O[N]
   0.     0.0000        2        2     0.060547     6.200000
   1.    -9.6000        6        9     0.058594     6.000000
   2.   -18.6000        0        9     0.060547     6.200000
   3.     0.0000        0        0     0.059570     6.100000
   4.     1.1000        0        0     0.059570     6.100000
   5.    -0.8000        8        8     0.059570     6.100000
   6.    -6.5000        3        6     0.057617     5.900000
   7.   -14.5000        0        9     0.059570     6.100000
   8.   -21.8000        0        9     0.059570     6.100000
   9.    -9.1000        6        9     0.058594     6.000000
MINIMUN POSITIVE SUB SEQUENCE *ASTRINGENT => O[N^2]
  10.     0.1000        0        0     0.339844     3.480000
  11.     0.4000        3        4     0.333008     3.410000
  12.     0.0000        0        0     0.301758     3.090000
  13.     0.0000        0        0     0.303711     3.110000
  14.     1.1000        4        4     0.336914     3.450000
  15.     0.1000        8        9     0.319336     3.270000
  16.     0.1000        2        4     0.309570     3.170000
  17.     0.1000        1        5     0.305664     3.130000
  18.     0.7000        5        5     0.302734     3.100000
  19.     0.4000        0        9     0.328125     3.360000
MAXIMUN MULTIPLE SUB SEQUENCE *ASTRINGENT => O[N]
  20.     0.9000        7        7     0.068359     7.000000
  21.  1058.7704        1        7     0.059570     6.100000
  22.    29.4622        2        7     0.058594     6.000000
  23.     0.0000        0        0     0.061523     6.300000
  24.     2.5937        0        9     0.063477     6.500000
  25.     0.9000        9        9     0.065430     6.700000
  26.    99.9456        2        9     0.059570     6.100000
  27.  2073.3646        0        7     0.060547     6.200000
  28.   869.0808        0        8     0.062500     6.400000
  29.  4252.4721        1        7     0.058594     6.000000
