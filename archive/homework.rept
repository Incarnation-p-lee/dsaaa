
-----------------------------Chapter 01-01-------------------------------

                               Selection Problem

TIME: Thu Dec  5 16:39:51 2013

ASTRINGENT: O(N*logN)
No.     DATA_SIZE         KVALUE:VALIDATION     TIME(usec)=>ASTRINGENT
 1             10          33575:         5              2=>  0.086859
 2             20         133930:        10              1=>  0.016690
 3             30          83499:        15              2=>  0.019601
 4             40          33973:        20              4=>  0.027109
 5             50          33575:        25              3=>  0.015337
 6             60           8963:        30              4=>  0.016283
 7             70           8963:        35              4=>  0.013450
 8             80           8963:        40              7=>  0.019968
 9             90           3062:        45              7=>  0.017285
10            100          12602:        50              7=>  0.015200
11            500         -48417:       250             37=>  0.011907
12           1000         -29734:       500             63=>  0.009120
13           5000         -15896:      2500            244=>  0.005730
14          10000          -3761:      5000            699=>  0.007589
15          50000          -5814:     25000           2919=>  0.005396
16         100000          -4373:     50000           3296=>  0.002863
17         500000            423:    250000          15585=>  0.002375
18        1000000             88:    500000          23000=>  0.001665
19        5000000            315:   2500003         144994=>  0.001880
20       10000000            316:   5000003         229049=>  0.001421

-----------------------------Chapter 01-04-------------------------------

                               Expanding Header Files

TIME: Thu Dec  5 16:39:52 2013

>>>>>>>> main.m <<<<<<<<
/*--------------------------------------------------------------*/
/*-AUTHOR:      Incarnation.P Lee                               */
/*-DATE:        08042013                                        */
/*-WHAT:        Homework of DSAAA                               */
/*-REVISION:                                                    */
/*- DATE ------------------------ DESCRIPTION ------------------*/
/*- 08042013    CHAPTER 1. Initilize the program.              -*/
/*- 10242013    CHAPTER 1. Add function pointer.               -*/
/*-                        Start chapter1.2                    -*/
/*--------------------------------------------------------------*/
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "vars.h"
 +vars.h
#include "externals.h"
 +externals.h

int
main(int argc, char **argv)
{
  register HOMEWORK *hw_entry = homework;
  ENTER("main");

  filepointer_init();

  while(hw_entry < homework + sizeof(homework) / sizeof(HOMEWORK))
    (*hw_entry++)();

  filepointer_close();

  LEAVE;
  return EXIT_SUCCESS;
}

>>>>>>>> chapter_1.m <<<<<<<<
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "chapter_1.h"
 +chapter_1.h

#include "chapter_1_1.c"
 +chapter_1_1.c
#include "chapter_1_4.c"
 +chapter_1_4.c

>>>>>>>> defs.h <<<<<<<<
#ifndef DEFINES_H
#define DEFINES_H


#if 1
#define STD_HEAD_FILE
#else
#define NO_STD_HEAD_FILE
#endif


#define MIN_STEP_WIDTH             1
#define DATA_MAX                   1024000
#define TRACE_DEPTH                4098
#define MAX_WIDTH_OF_LINE          120
#define FULL_NAME_LENGTH           256
#define REPEAT_COUNT               100
#define SUB_CASES_COUNT            1024
#define MAX_SUB_DATA_SIZE          10
#define FILENAME_SPLITER           "\"< >"
#define REPEAT_USED                0x1010
#define REPEAT_UNUSED              0x0101
#define REPEATED                   0xA0A0
#define NOT_REPEATED               0x0A0A
#define CONTAINED                  0x1234
#define NOT_CONTAINED              0x4321
#define CONTAINS_COUNT             10000
#define MIN_DOUBLE                 0.000001f
#define PRIMED                     0xA349
#define NOT_PRIMED                 0x3B21
#define PRIME_REPEAT_COUNT         10000
#define RIGHT_MOST_BIT_MASK        1
#define INTEGRATE_ODD              0x2321


#ifdef NO_STD_HEAD_FILE
#define EXPAND_DEPTH               128
#define FILENAME_LENGTH            32
#endif


#define ENTER(fname)               enter(#fname)
#define LEAVE                      leave()
#define TIME_START                 timing_start()
#define TIME_END(usec)             timing_end(usec)

#define MACRO_TO_STRING(symbol)    #symbol

#define SEQ_PERFORMANCE(times, func, start, end, type) \
while((times)-- > 0) \
{  \
  (*(func))((start), (end), (type)); \
}
#define CON_PERFORMANCE(times, func, specified, raw_data, size_c) \
(*(func))((specified), (raw_data), (size_c)); \
while(--(times) > 0) \
{  \
  (*(func))((specified), (raw_data), (size_c)); \
}
#define SUB_PERFORMANCE(times, func, data_in, size_s, st, ed) \
(*(func))((data_in), (size_s), (st), (ed)); \
while(--(times) > 0) \
{ \
  (*(func))((data_in), (size_s), (st), (ed)); \
}
#define PRIME_PERFORMANCE(times, func, raw_data) \
(*(func))((raw_data)); \
while(--(times) > 0) \
{ \
  (*(func))((raw_data)); \
}

typedef void (*HOMEWORK)(void);
typedef enum repeat_vehicle{
  UTIL,
  USED,
  SWAP,
}Rept_v;
typedef enum minsub_sequence{
  MIN_SUB,
  MIN_POSITIVE_SUB,
  MAX_MULTI_SUB,
}MinSub_seq;

typedef struct rept_entry{
  int      kvalue;
  int      data_size;
  int      validate;
  unsigned usec_cost;
  int      count;
  double   astringent;
}REPT_entry;

typedef struct gen_random_report{
  unsigned usec;
  int      dimension;
  char     *outline;
  int      start;
  int      end;
  double   expected;
}GR_report;

typedef struct iscontains_report{
  unsigned usec;
  int      min;
  int      size_c;
  double   astringent;
  int      result;
}IC_report;

typedef struct sub_sequence{
  double   min;
  unsigned usec;
  int      st;
  int      ed;
  double   astringent;
}SU_seq;

typedef struct prime_num_report{
  int      raw_data;
  int      isprimed;
  unsigned usec;
  double   astringent;
}PMN_report;
#endif

>>>>>>>> externals.h <<<<<<<<
#ifndef EXTERNALS_H
#define EXTERNALS_H


extern void
enter(const char *);
extern void
leave(void);
extern void
filepointer_init(void);
extern void
filepointer_close(void);

extern void
chapt_1_1(void);
extern void
chapt_1_4(void);
extern void
chapt_2_7(void);
extern void
chapt_2_11(void);
extern void
chapt_2_12(void);
extern void
chapt_2_13(void);

#endif

-----------------------------Chapter 02-07-------------------------------

                               Random Generation

TIME: Thu Dec  5 16:39:52 2013
NUM_START      END  DIMENSION    TIME(usec)  DESCRIPTION     ASTRINGENT
        1       10         10        1.7100  UNTIL Diffence   0.1710000
       11       20         10        1.5300  UNTIL Diffence   0.1530000
        1      100        100       68.6100  UNTIL Diffence   0.0068610
      201      400        200      240.4300  UNTIL Diffence   0.0030054
      101      600        500     1613.7600  UNTIL Diffence   0.0012910
       11     1000        990     6567.0200  UNTIL Diffence   0.0006768
     1001     2000       1000     6520.4000  UNTIL Diffence   0.0006520
        1       10         10        1.4200  USED Buffering   1.4200000
       11       20         10        1.3800  USED Buffering   1.3800000
        1      100        100       20.8900  USED Buffering   0.2089000
      201      400        200       47.6400  USED Buffering   0.1191000
      101      600        500      131.5800  USED Buffering   0.0526320
       11     1000        990      283.0200  USED Buffering   0.0288766
     1001     2000       1000      280.7500  USED Buffering   0.0280750
        1       10         10        0.3200  SWAP Randomly    3.2000000
       11       20         10        0.3200  SWAP Randomly    3.2000000
        1      100        100        2.2800  SWAP Randomly    2.2800000
      201      400        200        4.4700  SWAP Randomly    2.2350000
      101      600        500       11.0600  SWAP Randomly    2.2120000
       11     1000        990       21.6100  SWAP Randomly    2.1828283
     1001     2000       1000       21.8200  SWAP Randomly    2.1820000

-----------------------------Chapter 02-11-------------------------------

                               Specified Contains

TIME: Thu Dec  5 16:39:53 2013

NUMBER(MIN)  DIMENSION   TIME(usec)    RESULT      ASTRINGENT
EXPECTED: O[log(N)]
         1          10         379     NO_CONTAINS 164.597609
        11          20         426     NO_CONTAINS 142.202293
         1         100         551     NO_CONTAINS 119.648130
       201         400         649     NO_CONTAINS 108.320761
       101         600         673     CONTAINS    105.206722
        11        1000         604     CONTAINS     87.437956
      1001       12000         908     NO_CONTAINS  96.671211
         1       42000        1121     NO_CONTAINS 105.303453
       101       82000         987     NO_CONTAINS  87.233393
      2001       62000        1004     CONTAINS     90.984145
       121      122000        1031     NO_CONTAINS  88.031053
        11     3452000        1270     NO_CONTAINS  84.360358
      9001     8622000        1358     CONTAINS     85.035357

-----------------------------Chapter 02-12-------------------------------

                               Sub Sequences

TIME: Thu Dec  5 16:39:53 2013

Input Data:
INDEX  [00] [01] [02] [03] [04] [05] [06] [07] [08] [09]
   0.   0.1  0.2  0.0  0.3  0.4  0.5  0.6  0.9  0.8  0.7 
   1.  -0.1 -2.1  3.8 -0.9  1.3  9.0 -2.1 -6.0 -0.4 -1.1 
   2.  -0.1 -0.1 -2.8 -1.9 -0.3 -1.3 -7.1 -2.0 -0.3 -2.7 
   3.   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 
   4.   1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1 
   5.  -0.1  0.2 -0.3  0.4 -0.5  0.6 -0.7  0.8 -0.8  0.9 
   6.  -0.2 -0.8  1.3 -1.9  0.7 -2.1 -3.2  2.3  3.4 -1.1 
   7.  -2.1 -8.3 -0.8 -0.4  7.3  2.3 -8.2 -2.7 -1.5 -0.1 
   8.  -3.3 -2.2  1.3 -4.7  2.1  0.7 -3.4 -2.8 -1.4 -8.1 
   9.  -0.1 -2.9  4.2 -1.9  2.9  7.3 -1.4 -6.2 -1.4 -0.1 
Report:
INDEX    MINIMUN    START      END   TIME(usec)   ASTRINGENT
MINIMUN SUB SEQUENCE *ASTRINGENT => O[N]
   0.     0.0000        2        2     0.059570     6.100000
   1.    -9.6000        6        9     0.059570     6.100000
   2.   -18.6000        0        9     0.061523     6.300000
   3.     0.0000        0        0     0.060547     6.200000
   4.     1.1000        0        0     0.059570     6.100000
   5.    -0.8000        8        8     0.060547     6.200000
   6.    -6.5000        3        6     0.057617     5.900000
   7.   -14.5000        0        9     0.059570     6.100000
   8.   -21.8000        0        9     0.059570     6.100000
   9.    -9.1000        6        9     0.058594     6.000000
MINIMUN POSITIVE SUB SEQUENCE *ASTRINGENT => O[N^2]
  10.     0.1000        0        0     0.351562     3.600000
  11.     0.4000        3        4     0.339844     3.480000
  12.     0.0000        0        0     0.307617     3.150000
  13.     0.0000        0        0     0.307617     3.150000
  14.     1.1000        4        4     0.347656     3.560000
  15.     0.1000        8        9     0.333008     3.410000
  16.     0.1000        2        4     0.325195     3.330000
  17.     0.1000        1        5     0.317383     3.250000
  18.     0.7000        5        5     0.313477     3.210000
  19.     0.4000        0        9     0.337891     3.460000
MAXIMUN MULTIPLE SUB SEQUENCE *ASTRINGENT => O[N]
  20.     0.9000        7        7     0.069336     7.100000
  21.  1058.7704        1        7     0.060547     6.200000
  22.    29.4622        2        7     0.059570     6.100000
  23.     0.0000        0        0     0.065430     6.700000
  24.     2.5937        0        9     0.066406     6.800000
  25.     0.9000        9        9     0.068359     7.000000
  26.    99.9456        2        9     0.062500     6.400000
  27.  2073.3646        0        7     0.060547     6.200000
  28.   869.0808        0        8     0.060547     6.200000
  29.  4252.4721        1        7     0.059570     6.100000

-----------------------------Chapter 02-13-------------------------------

                               IS Prime Number

TIME: Thu Dec  5 16:39:53 2013
PRIME NUMBER VALIDATION: O[sqrt(N)]
INDEX   DATA_IN   IS_PRIMED  TIME(usec)  ASTRINGEND
   0.         2      PRIMED    0.05480    387.49452
   1.         3      PRIMED    0.05630    325.04820
   2.         4  NOT_PRIMED    0.05470    273.50000
   3.         5      PRIMED    0.05660    253.12290
   4.         6  NOT_PRIMED    0.05480    223.72006
   5.         7      PRIMED    0.05630    212.79400
   6.         8  NOT_PRIMED    0.05650    199.75767
   7.         9  NOT_PRIMED    0.05780    192.66667
   8.        10  NOT_PRIMED    0.05480    173.29282
   9.        11      PRIMED    0.07000    211.05794
  10.        12  NOT_PRIMED    0.05880    169.74098
  11.        13      PRIMED    0.07010    194.42242
  12.        14  NOT_PRIMED    0.05470    146.19190
  13.        15  NOT_PRIMED    0.05780    149.23896
  14.        16  NOT_PRIMED    0.05470    136.75000
  15.        17      PRIMED    0.07010    170.01747
  16.        18  NOT_PRIMED    0.05510    129.87195
  17.        19      PRIMED    0.07010    160.82043
  18.       101      PRIMED    0.06810     67.76203
  19.       201  NOT_PRIMED    0.05790     40.83951
  20.       301  NOT_PRIMED    0.06480     37.35010
  21.       601      PRIMED    0.09140     37.28284
  22.       901  NOT_PRIMED    0.07920     26.38535
  23.      1021      PRIMED    0.10210     31.95309
  24.      7341  NOT_PRIMED    0.05780      6.74606
  25.     12371  NOT_PRIMED    0.18710     16.82176
  26.     19127  NOT_PRIMED    0.10220      7.38971
  27.     23761      PRIMED    0.29160     18.91713
  28.     86117      PRIMED    0.50110     17.07576
  29.     86269      PRIMED    0.50130     17.06752
  30.     86477      PRIMED    0.51800     17.61487
  31.     86579      PRIMED    0.50760     17.25104
  32.     86587      PRIMED    0.50110     17.02935
  33.     84461  NOT_PRIMED    0.07400      2.54627
