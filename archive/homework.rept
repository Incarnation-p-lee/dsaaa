
-----------------------------Chapter 01-01-------------------------------

                               Selection Problem

TIME: Tue Dec  3 11:03:57 2013

ASTRINGENT: O(N*logN)
No.     DATA_SIZE         KVALUE:VALIDATION     TIME(usec)=>ASTRINGENT
 1             10         -27584:         5              1=>  0.043429
 2             20          64717:        10              2=>  0.033381
 3             30          64717:        15              3=>  0.029401
 4             40          64717:        20              4=>  0.027109
 5             50           3898:        25              3=>  0.015337
 6             60          -5414:        30              5=>  0.020353
 7             70          -5414:        35              6=>  0.020175
 8             80           3898:        40              4=>  0.011410
 9             90          17988:        45              6=>  0.014815
10            100          30385:        50              7=>  0.015200
11            500          30385:       250             26=>  0.008367
12           1000          21382:       500             42=>  0.006080
13           5000          16456:      2500            269=>  0.006317
14          10000            665:      5000            583=>  0.006330
15          50000          -2070:     25000           2086=>  0.003856
16         100000          -1216:     50000           4427=>  0.003845
17         500000           -313:    250000          11721=>  0.001786
18        1000000           -101:    500001          23839=>  0.001726
19        5000000           -170:   2500001         100477=>  0.001303
20       10000000             57:   5000007         185007=>  0.001148

-----------------------------Chapter 01-04-------------------------------

                               Expanding Header Files

TIME: Tue Dec  3 11:03:57 2013

>>>>>>>> main.m <<<<<<<<
/*--------------------------------------------------------------*/
/*-AUTHOR:      Incarnation.P Lee                               */
/*-DATE:        08042013                                        */
/*-WHAT:        Homework of DSAAA                               */
/*-REVISION:                                                    */
/*- DATE ------------------------ DESCRIPTION ------------------*/
/*- 08042013    CHAPTER 1. Initilize the program.              -*/
/*- 10242013    CHAPTER 1. Add function pointer.               -*/
/*-                        Start chapter1.2                    -*/
/*--------------------------------------------------------------*/
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "vars.h"
 +vars.h
#include "externals.h"
 +externals.h

int
main(int argc, char **argv)
{
  register HOMEWORK *hw_entry = homework;
  ENTER("main");

  filepointer_init();

  while(hw_entry < homework + sizeof(homework) / sizeof(HOMEWORK))
    (*hw_entry++)();

  filepointer_close();

  LEAVE;
  return EXIT_SUCCESS;
}

>>>>>>>> chapter_1.m <<<<<<<<
#include "include.h"
 +include.h
  +stdio.h
  +string.h
  +stddef.h
  +assert.h
  +limits.h
  +stdlib.h
  +stdarg.h
  +errno.h
  +time.h
  +ctype.h
  +math.h
  +sys/types.h
  +sys/stat.h
  +sys/wait.h
  +sys/time.h
  +sys/mman.h
  +unistd.h
  +fcntl.h
  +netinet/in.h
  +sys/socket.h
  +arpa/inet.h
  +pthread.h
#include "defs.h"
 +defs.h
#include "chapter_1.h"
 +chapter_1.h

#include "chapter_1_1.c"
 +chapter_1_1.c
#include "chapter_1_4.c"
 +chapter_1_4.c

>>>>>>>> defs.h <<<<<<<<
#ifndef DEFINES_H
#define DEFINES_H


#if 1
#define STD_HEAD_FILE
#else
#define NO_STD_HEAD_FILE
#endif


#define MIN_STEP_WIDTH             1
#define DATA_MAX                   1024000
#define TRACE_DEPTH                4098
#define MAX_WIDTH_OF_LINE          120
#define FULL_NAME_LENGTH           256
#define REPEAT_COUNT               100
#define SUB_CASES_COUNT            1024
#define MAX_SUB_DATA_SIZE          10
#define FILENAME_SPLITER           "\"< >"
#define REPEAT_USED                0x1010
#define REPEAT_UNUSED              0x0101
#define REPEATED                   0xA0A0
#define NOT_REPEATED               0x0A0A
#define CONTAINED                  0x1234
#define NOT_CONTAINED              0x4321
#define CONTAINS_COUNT             10000
#define MIN_DOUBLE                 0.000001f


#ifdef NO_STD_HEAD_FILE
#define EXPAND_DEPTH               128
#define FILENAME_LENGTH            32
#endif


#define ENTER(fname)     enter(#fname)
#define LEAVE            leave()
#define TIME_START       timing_start()
#define TIME_END(usec)   timing_end(usec)

#define SEQ_PERFORMANCE(times, func, start, end, type) \
while((times)-- > 0) \
{  \
  (*(func))((start), (end), (type)); \
}
#define CON_PERFORMANCE(times, func, specified, raw_data, size_c) \
(*(func))((specified), (raw_data), (size_c)); \
while(--(times) > 0) \
{  \
  (*(func))((specified), (raw_data), (size_c)); \
}
#define SUB_PERFORMANCE(times, func, data_in, size_s, st, ed) \
(*(func))((data_in), (size_s), (st), (ed)); \
while(--(times) > 0) \
{ \
  (*(func))((data_in), (size_s), (st), (ed)); \
}


typedef void (*HOMEWORK)(void);
typedef enum repeat_vehicle{
  UTIL,
  USED,
  SWAP,
}Rept_v;
typedef enum minsub_sequence{
  MIN_SUB,
  MIN_POSITIVE_SUB,
  MAX_MULTI_SUB,
}MinSub_seq;

typedef struct rept_entry{
  int      kvalue;
  int      data_size;
  int      validate;
  unsigned usec_cost;
  int      count;
  double   astringent;
}REPT_entry;

typedef struct gen_random_report{
  unsigned usec;
  int      dimension;
  char     *outline;
  int      start;
  int      end;
  double   expected;
}GR_report;

typedef struct iscontains_report{
  unsigned usec;
  int      min;
  int      size_c;
  double   astringent;
  int      result;
}IC_report;

typedef struct sub_sequence{
  double   min;
  unsigned usec;
  int      st;
  int      ed;
  double   astringent;
}SU_seq;

#endif

>>>>>>>> externals.h <<<<<<<<
#ifndef EXTERNALS_H
#define EXTERNALS_H


extern void
enter(const char *);
extern void
leave(void);
extern void
filepointer_init(void);
extern void
filepointer_close(void);

extern void
chapt_1_1(void);
extern void
chapt_1_4(void);
extern void
chapt_2_7(void);
extern void
chapt_2_11(void);

#endif

-----------------------------Chapter 02-07-------------------------------

                               Random Generation

TIME: Tue Dec  3 11:03:57 2013
NUM_START      END  DIMENSION    TIME(usec)  DESCRIPTION     ASTRINGENT
        1       10         10        2.0300  UNTIL Diffence   0.2030000
       11       20         10        1.7300  UNTIL Diffence   0.1730000
        1      100        100       72.6000  UNTIL Diffence   0.0072600
      201      400        200      259.2600  UNTIL Diffence   0.0032408
      101      600        500     1673.5300  UNTIL Diffence   0.0013388
       11     1000        990     6631.2200  UNTIL Diffence   0.0006834
     1001     2000       1000     6875.8800  UNTIL Diffence   0.0006876
        1       10         10        1.3700  USED Buffering   1.3700000
       11       20         10        1.3900  USED Buffering   1.3900000
        1      100        100       19.8300  USED Buffering   0.1983000
      201      400        200       46.2200  USED Buffering   0.1155500
      101      600        500      133.0300  USED Buffering   0.0532120
       11     1000        990      293.7700  USED Buffering   0.0299735
     1001     2000       1000      289.6300  USED Buffering   0.0289630
        1       10         10        0.3200  SWAP Randomly    3.2000000
       11       20         10        0.3100  SWAP Randomly    3.1000000
        1      100        100        2.3800  SWAP Randomly    2.3800000
      201      400        200        4.5000  SWAP Randomly    2.2500000
      101      600        500       11.1200  SWAP Randomly    2.2240000
       11     1000        990       21.8200  SWAP Randomly    2.2040404
     1001     2000       1000       22.0500  SWAP Randomly    2.2050000

-----------------------------Chapter 02-11-------------------------------

                               Specified Contains

TIME: Tue Dec  3 11:03:59 2013

NUMBER(MIN)  DIMENSION   TIME(usec)    RESULT      ASTRINGENT
EXPECTED: O[log(N)]
         1          10         379     NO_CONTAINS 164.597609
        11          20         427     NO_CONTAINS 142.536102
         1         100         506     CONTAINS    109.876504
       201         400         695     NO_CONTAINS 115.998350
       101         600         674     CONTAINS    105.363047
        11        1000         717     NO_CONTAINS 103.796381
      1001       12000         855     NO_CONTAINS  91.028508
         1       42000        1130     NO_CONTAINS 106.148887
       101       82000         978     NO_CONTAINS  86.437951
      2001       62000        1014     NO_CONTAINS  91.890361
       121      122000        1023     NO_CONTAINS  87.347980
        11     3452000        1279     NO_CONTAINS  84.958187
      9001     8622000        1211     CONTAINS     75.830499

-----------------------------Chapter 02-12-------------------------------

                               Sub Sequences

TIME: Tue Dec  3 11:03:59 2013

Input Data:
INDEX  [00] [01] [02] [03] [04] [05] [06] [07] [08] [09]
   0.   0.1  0.2  0.0  0.3  0.4  0.5  0.6  0.9  0.8  0.7 
   1.  -0.1 -2.1  3.8 -0.9  1.3  9.0 -2.1 -6.0 -0.4 -1.1 
   2.  -0.1 -0.1 -2.8 -1.9 -0.3 -1.3 -7.1 -2.0 -0.3 -2.7 
   3.   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 
   4.   1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1  1.1 
   5.  -0.1  0.2 -0.3  0.4 -0.5  0.6 -0.7  0.8 -0.8  0.9 
   6.  -0.2 -0.8  1.3 -1.9  0.7 -2.1 -3.2  2.3  3.4 -1.1 
   7.  -2.1 -8.3 -0.8 -0.4  7.3  2.3 -8.2 -2.7 -1.5 -0.1 
   8.  -3.3 -2.2  1.3 -4.7  2.1  0.7 -3.4 -2.8 -1.4 -8.1 
   9.  -0.1 -2.9  4.2 -1.9  2.9  7.3 -1.4 -6.2 -1.4 -0.1 
Report:
INDEX    MINIMUN    START      END   TIME(usec)   ASTRINGENT
MINIMUN SUB SEQUENCE *ASTRINGENT => O[N]
   0.     0.0000        2        2     0.060547     6.200000
   1.    -9.6000        6        9     0.059570     6.100000
   2.   -18.6000        0        9     0.061523     6.300000
   3.     0.0000        0        0     0.059570     6.100000
   4.     1.1000        0        0     0.060547     6.200000
   5.    -0.8000        8        8     0.060547     6.200000
   6.    -6.5000        3        6     0.058594     6.000000
   7.   -14.5000        0        9     0.059570     6.100000
   8.   -21.8000        0        9     0.060547     6.200000
   9.    -9.1000        6        9     0.059570     6.100000
MINIMUN POSITIVE SUB SEQUENCE *ASTRINGENT => O[N^2]
  10.     0.0000        0        0     0.320312     3.280000
  11.     1.0000        0        2     0.337891     3.460000
  12.     0.0000        0        0     0.319336     3.270000
  13.     0.0000        0        0     0.320312     3.280000
  14.     1.0000        0        0     0.358398     3.670000
  15.     0.0000        0        0     0.318359     3.260000
  16.     1.0000        0        2     0.337891     3.460000
  17.     2.0000        1        5     0.336914     3.450000
  18.     1.0000        2        4     0.324219     3.320000
  19.     1.0000        2        8     0.335938     3.440000
MINIMUN SUB SEQUENCE *ASTRINGENT => O[N]
  20.     0.9000        7        7     0.068359     7.000000
  21.  1058.7704        1        7     0.059570     6.100000
  22.    29.4622        2        7     0.059570     6.100000
  23.     0.0000        0        0     0.062500     6.400000
  24.     2.5937        0        9     0.074219     7.600000
  25.     0.9000        9        9     0.104492    10.700000
  26.    99.9456        2        9     0.061523     6.300000
  27.  2073.3646        0        7     0.060547     6.200000
  28.   869.0808        0        8     0.062500     6.400000
  29.  4252.4721        1        7     0.059570     6.100000
